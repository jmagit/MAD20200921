swagger: '2.0'
info:
  description: Ejemplo de API First. Acceso de los peritos a los encargos.
  version: '1.0'
  title: 'Microservicio: Peritación'
  contact:
    name: Yo Mismo
    url: 'http://www.example.com'
    email: myeaddress@example.com
  license:
    name: Apache License Version 2.0
host: 'localhost:8080'
basePath: /
tags:
  - name: peritos-resource
    description: Gestion de peritos
  - name: encargos-resource
    description: Gestion de peritos
security:
  - default: []
paths:
  /peritos:
    get:
      tags:
        - peritos-resource
      summary: Listado de peritos
      operationId: getAllUsingGET_1
      produces:
        - '*/*'
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Peritos'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      deprecated: false
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: "var accept = mc.getProperty('AcceptHeader');\nvar responseCode = mc.getProperty('query.param.responseCode');\nvar responses = [];\n\nvar responseCodeSC;\n\nif (!responses[200]) {\n responses [200] = [];\n}\nresponses[200][\"application/json\"] = [\n  \t{\"id\": 1, \"nombre\": \"Fay\", \"apellidos\": \"Hopper\", \"correo\": \"rutrum.lorem.ac@Cumsociis.com\", \"telefono\": \"(230) 312-5395\", \"modificado\": \"2121-03-03 00:00:00\"},\n\t{\"id\": 2, \"nombre\": \"Medge\", \"apellidos\": \"Salas\", \"correo\": \"arcu@ametultricies.com\", \"telefono\": \"(917) 681-3845\", \"modificado\": \"2121-08-22 00:00:00\"},\n\t{\"id\": 3, \"nombre\": \"Katelyn\", \"apellidos\": \"Kidd\", \"correo\": \"interdum@litoratorquent.ca\", \"telefono\": \"(754) 167-6415\", \"modificado\": \"2020-11-20 00:00:00\"},\n\t{\"id\": 4, \"nombre\": \"Ezekiel\", \"apellidos\": \"Solomon\", \"correo\": \"Integer.sem.elit@elitafeugiat.co.uk\", \"telefono\": \"(362) 820-3727\", \"modificado\": \"2020-08-19 00:00:00\"},\n\t{\"id\": 5, \"nombre\": \"Cheyenne\", \"apellidos\": \"Bass\", \"correo\": \"turpis.Aliquam.adipiscing@utsemNulla.org\", \"telefono\": \"(380) 458-0295\", \"modificado\": \"2121-07-23 00:00:00\"},\n\t{\"id\": 6, \"nombre\": \"Harper\", \"apellidos\": \"Harvey\", \"correo\": \"tellus.Suspendisse@rhoncusDonecest.org\", \"telefono\": \"(516) 540-2207\", \"modificado\": \"2020-03-02 00:00:00\"},\n\t{\"id\": 7, \"nombre\": \"Pandora\", \"apellidos\": \"Flynn\", \"correo\": \"odio@enimSed.com\", \"telefono\": \"(256) 816-2649\", \"modificado\": \"2020-06-09 00:00:00\"},\n\t{\"id\": 8, \"nombre\": \"Chanda\", \"apellidos\": \"Henson\", \"correo\": \"quam.Curabitur@Aliquamornare.ca\", \"telefono\": \"(722) 993-5286\", \"modificado\": \"2020-05-15 00:00:00\"},\n\t{\"id\": 9, \"nombre\": \"Herman\", \"apellidos\": \"Mathis\", \"correo\": \"iaculis.nec@blanditatnisi.org\", \"telefono\": \"(337) 850-2746\", \"modificado\": \"2020-02-10 00:00:00\"},\n\t{\"id\": 10, \"nombre\": \"Irene\", \"apellidos\": \"Davis\", \"correo\": \"vehicula.risus@Aliquam.ca\", \"telefono\": \"(545) 466-7143\", \"modificado\": \"2020-10-24 00:00:00\"},\n\t{\"id\": 11, \"nombre\": \"Myra\", \"apellidos\": \"Good\", \"correo\": \"dolor@DonecegestasAliquam.edu\", \"telefono\": \"(248) 733-0443\", \"modificado\": \"2020-02-13 00:00:00\"},\n\t{\"id\": 12, \"nombre\": \"Salvador\", \"apellidos\": \"Glover\", \"correo\": \"diam.dictum.sapien@felis.co.uk\", \"telefono\": \"(826) 480-8266\", \"modificado\": \"2121-06-11 00:00:00\"},\n\t{\"id\": 13, \"nombre\": \"Lewis\", \"apellidos\": \"Hayden\", \"correo\": \"et@nuncsit.co.uk\", \"telefono\": \"(991) 251-5197\", \"modificado\": \"2121-01-20 00:00:00\"},\n\t{\"id\": 14, \"nombre\": \"Barbara\", \"apellidos\": \"Mcdowell\", \"correo\": \"laoreet.lectus.quis@ornare.co.uk\", \"telefono\": \"(200) 381-0462\", \"modificado\": \"2020-02-29 00:00:00\"},\n\t{\"id\": 15, \"nombre\": \"Brielle\", \"apellidos\": \"Castaneda\", \"correo\": \"dis@eu.ca\", \"telefono\": \"(649) 505-2026\", \"modificado\": \"1919-10-11 00:00:00\"},\n\t{\"id\": 16, \"nombre\": \"Hadassah\", \"apellidos\": \"Rocha\", \"correo\": \"consectetuer.adipiscing.elit@Cumsociis.co.uk\", \"telefono\": \"(816) 690-4522\", \"modificado\": \"2020-04-24 00:00:00\"},\n\t{\"id\": 17, \"nombre\": \"Octavia\", \"apellidos\": \"Mosley\", \"correo\": \"lectus.justo@lectusCumsociis.org\", \"telefono\": \"(647) 463-8929\", \"modificado\": \"2121-08-24 00:00:00\"},\n\t{\"id\": 18, \"nombre\": \"Justine\", \"apellidos\": \"Roach\", \"correo\": \"facilisis.magna.tellus@sitametorci.co.uk\", \"telefono\": \"(257) 526-9758\", \"modificado\": \"2121-01-20 00:00:00\"},\n\t{\"id\": 19, \"nombre\": \"Ina\", \"apellidos\": \"Williamson\", \"correo\": \"consequat.enim@eratSed.net\", \"telefono\": \"(548) 817-3815\", \"modificado\": \"2121-02-06 00:00:00\"},\n\t{\"id\": 20, \"nombre\": \"Simone\", \"apellidos\": \"Mcdaniel\", \"correo\": \"iaculis.quis@nasceturridiculusmus.com\", \"telefono\": \"(616) 743-4469\", \"modificado\": \"2121-06-08 00:00:00\"}\n\n ];\nif (!responses[401]) {\n  responses[401] = [];\n}\nresponses[401][\"application/json\"] = \"\";\nresponses[401][\"application/xml\"] = \"\";\n\nif (!responses[403]) {\n  responses[403] = [];\n}\nresponses[403][\"application/json\"] = \"\";\nresponses[403][\"application/xml\"] = \"\";\n\nif (!responses[404]) {\n  responses[404] = [];\n}\nresponses[404][\"application/json\"] = \"\";\nresponses[404][\"application/xml\"] = \"\";\n\n\nresponses[501] = [];\nresponses[501][\"application/json\"] = {\n\"code\" : 501,\n\"description\" : \"Not Implemented\"}\nresponses[501][\"application/xml\"] = <response><code>501</code><description>Not Implemented</description></response>;\n\nif (responseCode == null) {\n responseCode = 200;\n}\n\nif (!responses[responseCode]) {\n responseCode = 501;\n}\n\nif (responseCode === \"default\") {\n  responseCodeSC = mc.getProperty('query.param.responseCode');\n} else {\n  responseCodeSC = responseCode;\n}\nif (accept == null || !responses[responseCode][accept]) {\n accept = \"application/json\";\n}\n\nif (accept == \"application/json\") {\n mc.setProperty('CONTENT_TYPE', 'application/json');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadJSON(responses[responseCode][\"application/json\"]);\n} else if (accept == \"application/xml\") {\n mc.setProperty('CONTENT_TYPE', 'application/xml');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadXML(responses[responseCode][\"application/xml\"]);\n}"
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - peritos-resource
      summary: Añadir un nuevo perito
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: item
          description: Datos del perito
          required: true
          schema:
            $ref: '#/definitions/Perito'
      responses:
        '201':
          description: Created
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      deprecated: false
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: >-
        var accept = mc.getProperty('AcceptHeader');

        var responseCode = mc.getProperty('query.param.responseCode');

        var responses = [];


        var responseCodeSC;


        if (!responses[201]) {
         responses [201] = [];
        }

        responses[201]["application/json"] = { };

        if (!responses[401]) {
          responses[401] = [];
        }

        responses[401]["application/json"] = "";

        responses[401]["application/xml"] = "";


        if (!responses[403]) {
          responses[403] = [];
        }

        responses[403]["application/json"] = "";

        responses[403]["application/xml"] = "";


        if (!responses[404]) {
          responses[404] = [];
        }

        responses[404]["application/json"] = "";

        responses[404]["application/xml"] = "";



        responses[501] = [];

        responses[501]["application/json"] = {

        "code" : 501,

        "description" : "Not Implemented"}

        responses[501]["application/xml"] =
        <response><code>501</code><description>Not
        Implemented</description></response>;


        if (responseCode == null) {
         responseCode = 201;
        }


        if (!responses[responseCode]) {
         responseCode = 501;
        }


        if (responseCode === "default") {
          responseCodeSC = mc.getProperty('query.param.responseCode');
        } else {
          responseCodeSC = responseCode;
        }

        if (accept == null || !responses[responseCode][accept]) {
         accept = "application/json";
        }


        if (accept == "application/json") {
         mc.setProperty('CONTENT_TYPE', 'application/json');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadJSON(responses[responseCode]["application/json"]);
        } else if (accept == "application/xml") {
         mc.setProperty('CONTENT_TYPE', 'application/xml');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadXML(responses[responseCode]["application/xml"]);
        }
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  '/peritos/{id}':
    get:
      tags:
        - peritos-resource
      summary: Recuperar los datos de un perito
      operationId: getOneUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Identificador del perito
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Perito'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      deprecated: false
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: >-
        var accept = mc.getProperty('AcceptHeader');

        var responseCode = mc.getProperty('query.param.responseCode');

        var responses = [];


        var responseCodeSC;


        if (!responses[200]) {
         responses [200] = [];
        }

        if (mc.getProperty('uri.var.id') == 1)
          responses[200]["application/json"] = { "id": 1, "nombre": "Keiko", "apellidos": "Singleton", "correo": "mauris@ac.edu", "telefono": "(364) 752-6215", "modificado": "2121-01-05 00:00:00" };
        else if (mc.getProperty('uri.var.id') == 2)
          responses[200]["application/json"] = { "id": 2, "nombre": "Chelsea", "apellidos": "Bray", "correo": "eu.eros.Nam@at.ca", "telefono": "(267) 925-7593", "modificado": "2020-04-24 00:00:00" };
        else
          responseCode = 404;

        if (!responses[401]) {
          responses[401] = [];
        }

        responses[401]["application/json"] = "";

        responses[401]["application/xml"] = "";


        if (!responses[403]) {
          responses[403] = [];
        }

        responses[403]["application/json"] = "";

        responses[403]["application/xml"] = "";


        if (!responses[404]) {
          responses[404] = [];
        }

        responses[404]["application/json"] = "";

        responses[404]["application/xml"] = "";



        responses[501] = [];

        responses[501]["application/json"] = {

        "code" : 501,

        "description" : "Not Implemented"}

        responses[501]["application/xml"] =
        <response><code>501</code><description>Not
        Implemented</description></response>;


        if (responseCode == null) {
         responseCode = 200;
        }


        if (!responses[responseCode]) {
         responseCode = 501;
        }


        if (responseCode === "default") {
          responseCodeSC = mc.getProperty('query.param.responseCode');
        } else {
          responseCodeSC = responseCode;
        }

        if (accept == null || !responses[responseCode][accept]) {
         accept = "application/json";
        }


        if (accept == "application/json") {
         mc.setProperty('CONTENT_TYPE', 'application/json');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadJSON(responses[responseCode]["application/json"]);
        } else if (accept == "application/xml") {
         mc.setProperty('CONTENT_TYPE', 'application/xml');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadXML(responses[responseCode]["application/xml"]);
        }
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    put:
      tags:
        - peritos-resource
      summary: Modificar los datos de un perito existente
      operationId: changeUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Identificador del perito
          required: true
          type: integer
          format: int32
        - in: body
          name: item
          description: Datos del perito
          required: true
          schema:
            $ref: '#/definitions/Perito'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Perito'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      deprecated: false
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: "var accept = mc.getProperty('AcceptHeader');\nvar responseCode = mc.getProperty('query.param.responseCode');\nvar responses = [];\n\nvar responseCodeSC;\n\nif (!responses[200]) {\n responses [200] = [];\n}\nresponses[200][\"application/json\"] = {\r\n  \"id\" : 0,\r\n  \"nombre\" : \"string\",\r\n  \"apellidos\" : \"string\",\r\n  \"correo\" : \"string\",\r\n  \"telefono\" : \"string\",\r\n  \"modificado\" : \"string\"\r\n};\nif (!responses[201]) {\n  responses[201] = [];\n}\nresponses[201][\"application/json\"] = \"\";\nresponses[201][\"application/xml\"] = \"\";\n\nif (!responses[401]) {\n  responses[401] = [];\n}\nresponses[401][\"application/json\"] = \"\";\nresponses[401][\"application/xml\"] = \"\";\n\nif (!responses[403]) {\n  responses[403] = [];\n}\nresponses[403][\"application/json\"] = \"\";\nresponses[403][\"application/xml\"] = \"\";\n\nif (!responses[404]) {\n  responses[404] = [];\n}\nresponses[404][\"application/json\"] = \"\";\nresponses[404][\"application/xml\"] = \"\";\n\n\nresponses[501] = [];\nresponses[501][\"application/json\"] = {\n\"code\" : 501,\n\"description\" : \"Not Implemented\"}\nresponses[501][\"application/xml\"] = <response><code>501</code><description>Not Implemented</description></response>;\n\nif (responseCode == null) {\n responseCode = 200;\n}\n\nif (!responses[responseCode]) {\n responseCode = 501;\n}\n\nif (responseCode === \"default\") {\n  responseCodeSC = mc.getProperty('query.param.responseCode');\n} else {\n  responseCodeSC = responseCode;\n}\nif (accept == null || !responses[responseCode][accept]) {\n accept = \"application/json\";\n}\n\nif (accept == \"application/json\") {\n mc.setProperty('CONTENT_TYPE', 'application/json');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadJSON(responses[responseCode][\"application/json\"]);\n} else if (accept == \"application/xml\") {\n mc.setProperty('CONTENT_TYPE', 'application/xml');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadXML(responses[responseCode][\"application/xml\"]);\n}"
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - peritos-resource
      summary: Borrar los datos de un perito existente
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: Identificador del perito
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      deprecated: false
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: >-
        var accept = mc.getProperty('AcceptHeader');

        var responseCode = mc.getProperty('query.param.responseCode');

        var responses = [];


        var responseCodeSC;

        if (!responses[204]) {
          responses[204] = [];
        }

        responses[204]["application/json"] = "";

        responses[204]["application/xml"] = "";


        if (!responses[401]) {
          responses[401] = [];
        }

        responses[401]["application/json"] = "";

        responses[401]["application/xml"] = "";


        if (!responses[403]) {
          responses[403] = [];
        }

        responses[403]["application/json"] = "";

        responses[403]["application/xml"] = "";


        if (!responses[404]) {
          responses[404] = [];
        }

        responses[404]["application/json"] = "";

        responses[404]["application/xml"] = "";



        responses[501] = [];

        responses[501]["application/json"] = {

        "code" : 501,

        "description" : "Not Implemented"}

        responses[501]["application/xml"] =
        <response><code>501</code><description>Not
        Implemented</description></response>;


        if (responseCode == null) {
         responseCode = 204;
        }


        if (!responses[responseCode]) {
         responseCode = 501;
        }


        if (responseCode === "default") {
          responseCodeSC = mc.getProperty('query.param.responseCode');
        } else {
          responseCodeSC = responseCode;
        }

        if (accept == null || !responses[responseCode][accept]) {
         accept = "application/json";
        }


        if (accept == "application/json") {
         mc.setProperty('CONTENT_TYPE', 'application/json');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadJSON(responses[responseCode]["application/json"]);
        } else if (accept == "application/xml") {
         mc.setProperty('CONTENT_TYPE', 'application/xml');
         mc.setProperty('HTTP_SC', responseCodeSC + "");
         mc.setPayloadXML(responses[responseCode]["application/xml"]);
        }
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /encargos:
    get:
      tags:
        - encargos-resource
      summary: Listado de encargos pendientes
      parameters:
        - name: fecha
          in: query
          description: limite de los encargos
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Encargo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-mediation-script: "var accept = mc.getProperty('AcceptHeader');\nvar responseCode = mc.getProperty('query.param.responseCode');\nvar responses = [];\n\nvar responseCodeSC;\n\nif (!responses[200]) {\n responses [200] = [];\n}\nresponses[200][\"application/json\"] = [\n\t{\n\t\t\"encargoId\": 1,\n\t\t\"peritoId\": 2,\n\t\t\"peticion\": \"2121-0707-1515 00:00:00\",\n\t\t\"ref\": \"D526849C-68B2-4AF2-3DAD-5ED73E19B35B\",\n\t\t\"direccion\": \"703-9548 Interdum. Calle\"\n\t},\n\t{\n\t\t\"encargoId\": 2,\n\t\t\"peritoId\": 6,\n\t\t\"peticion\": \"2020-1010-0404 00:00:00\",\n\t\t\"ref\": \"8D94F02A-4367-AD82-DAB0-07BBCC2167C6\",\n\t\t\"direccion\": \"878-1863 Eget, Calle\"\n\t},\n\t{\n\t\t\"encargoId\": 3,\n\t\t\"peritoId\": 2,\n\t\t\"peticion\": \"2020-1212-0101 00:00:00\",\n\t\t\"ref\": \"2E176379-A76B-4FD0-0B0D-2B4FD0575775\",\n\t\t\"direccion\": \"4944 Et, Av.\"\n\t}];\nif (!responses[401]) {\n  responses[401] = [];\n}\nresponses[401][\"application/json\"] = \"\";\nresponses[401][\"application/xml\"] = \"\";\n\nif (!responses[403]) {\n  responses[403] = [];\n}\nresponses[403][\"application/json\"] = \"\";\nresponses[403][\"application/xml\"] = \"\";\n\nif (!responses[404]) {\n  responses[404] = [];\n}\nresponses[404][\"application/json\"] = \"\";\nresponses[404][\"application/xml\"] = \"\";\n\n\nresponses[501] = [];\nresponses[501][\"application/json\"] = {\n\"code\" : 501,\n\"description\" : \"Not Implemented\"}\nresponses[501][\"application/xml\"] = <response><code>501</code><description>Not Implemented</description></response>;\n\nif (responseCode == null) {\n responseCode = 200;\n}\n\nif (!responses[responseCode]) {\n responseCode = 501;\n}\n\nif (responseCode === \"default\") {\n  responseCodeSC = mc.getProperty('query.param.responseCode');\n} else {\n  responseCodeSC = responseCode;\n}\nif (accept == null || !responses[responseCode][accept]) {\n accept = \"application/json\";\n}\n\nif (accept == \"application/json\") {\n mc.setProperty('CONTENT_TYPE', 'application/json');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadJSON(responses[responseCode][\"application/json\"]);\n} else if (accept == \"application/xml\") {\n mc.setProperty('CONTENT_TYPE', 'application/xml');\n mc.setProperty('HTTP_SC', responseCodeSC + \"\");\n mc.setPayloadXML(responses[responseCode][\"application/xml\"]);\n}"
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
securityDefinitions:
  default:
    type: oauth2
    authorizationUrl: 'https://test.com'
    flow: implicit
definitions:
  Peritos:
    type: array
    description: Listado de peritos
    items:
      $ref: '#/definitions/Perito'
  Perito:
    type: object
    required:
      - apellidos
      - id
      - nombre
    properties:
      id:
        type: integer
        format: int32
        description: Identificador del perito
      nombre:
        type: string
        maxLength: 50
      apellidos:
        type: string
        maxLength: 100
      correo:
        type: string
        maxLength: 250
      telefono:
        type: string
        maxLength: 15
      modificado:
        type: string
        format: dateTime
        description: Fecha de la última modificación
    title: Perito
    description: Datos de perito
  Encargo:
    type: object
    required:
      - direccion
      - encargoId
      - peritoId
      - peticion
      - ref
    properties:
      encargoId:
        type: integer
        format: int32
      peritoId:
        type: integer
        format: int32
        description: Identificador del perito
      peticion:
        type: string
        format: dateTime
        description: Fecha de la petición
      ref:
        type: string
      direccion:
        type: string
    title: Encargo
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - testKey
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-basePath: /peritos/0.1.0
x-wso2-transports:
  - http
  - https
x-wso2-application-security:
  security-types:
    - oauth2
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
